AWSTemplateFormatVersion: '2010-09-09'

Description: VPC CloudFormation 

Parameters:
  VPCCidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: VPC CIDR Block (eg 10.0.0.0/16)

  PublicSubnet0CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: VPC CIDR Block for the Public Subnet (eg 10.0.0.0/24)
   
  PublicSubnet1CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: VPC CIDR Block for the Public Subnet (eg 10.0.1.0/24)
    
  PrivateSubnet0CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: VPC CIDR Block for the Private Subnet (eg 10.0.10.0/24)
    
  PrivateSubnet1CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: VPC CIDR Block for the Private Subnet (eg 10.0.11.0/24)

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VPCCidrBlock
          - PublicSubnet0CidrBlock
          - PublicSubnet1CidrBlock
          - PrivateSubnet0CidrBlock
          - PrivateSubnet1CidrBlock
#    ParameterLabels: 
#      VPCID: 
#        default: "Which VPC should this be deployed to?"

Resources:

  ProdVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: Prod-VPC

  PublicSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet0CidrBlock
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-PublicSubnet0

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet1CidrBlock
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-PublicSubnet1

  PrivateSubnet10:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet0CidrBlock
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-PrivateSubnet10

  PrivateSubnet11:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1CidrBlock
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-PrivateSubnet11

  ProdRouteTable0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-RouteTable0

  ProdRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-RouteTable1

  ProdRouteTable10:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-RouteTable10

  ProdRouteTable11:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProdVPC
      Tags:
        - Key: Name
          Value: Prod-RouteTable11

  route0:
    DependsOn: GWAttachment0
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref ProdRouteTable0
      GatewayId: !Ref ProdIGW

  route1:
    DependsOn: GWAttachment0
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref ProdRouteTable1
      GatewayId: !Ref ProdIGW

  route10:
    DependsOn: ProdNATGW10
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref ProdRouteTable10
      NatGatewayId: !Ref ProdNATGW10

  route11:
    DependsOn: ProdNATGW11
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref ProdRouteTable11
      NatGatewayId: !Ref ProdNATGW11

  ProdNATGW10:
    DependsOn: EIP10
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP10
        - AllocationId
      SubnetId: !Ref PublicSubnet0
      Tags:
        - Key: Name
          Value: ProdNATGateway10

  ProdNATGW11:
    DependsOn: EIP11
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP11
        - AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: ProdNATGateway11

  EIP10:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  EIP11:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  SubnetRouteAssociation0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProdRouteTable0
      SubnetId: !Ref PublicSubnet0

  SubnetRouteAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProdRouteTable1
      SubnetId: !Ref PublicSubnet1

  SubnetRouteAssociation10:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProdRouteTable10
      SubnetId: !Ref PrivateSubnet10

  SubnetRouteAssociation11:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProdRouteTable11
      SubnetId: !Ref PrivateSubnet11

  ProdIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Prod-IGW

  GWAttachment0:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ProdVPC
      InternetGatewayId: !Ref ProdIGW

  sgWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: sgWeb
      VpcId: !Ref ProdVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  sgDB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: sgDB
      VpcId: !Ref ProdVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref sgWeb
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 127.0.0.1/32
